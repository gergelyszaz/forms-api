openapi: 3.0.0
servers:
  - description: JSON Forms API
    url: https://virtserver.swaggerhub.com/gergelyszaz/Forms/1.0.0
info:
  version: '1.0.0'
  title: Generic Form Creation Project
tags:
  - name: 'form'
  - name: 'data'
paths:
#-------------------------------
# Form CRUD
#-------------------------------
  /forms:
    get:
      tags: ['form']
      summary: List Forms
      description: List Forms
      operationId: ListForms
      parameters:
        - $ref: '#/components/parameters/LimitQueryParameter'
        - $ref: '#/components/parameters/OffsetQueryParameter'
        - $ref: '#/components/parameters/SortQueryParameter'
        - $ref: '#/components/parameters/FilterQueryParameter'
      responses:
        '200': 
          $ref: '#/components/responses/ListResponse'
                    
    post:
      tags: ['form']
      summary: Create Form
      operationId: CreateForm
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/FormRequestDTO'
      responses:
        '200':
          $ref: '#/components/responses/CreatedResponse'
  /forms/{id}:
    get:
      tags: ['form']
      summary: Get Form
      operationId: GetForm
      parameters:
        - $ref: '#/components/parameters/IdPathParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormResponseDTO'
              examples:
                simpleForm:
                  $ref: '#/components/examples/FormResponseDTOExample'
    put:
      tags: ['form']
      summary: Update Form
      operationId: UpdateForm
      parameters:
        - $ref: '#/components/parameters/IdPathParameter'
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/FormRequestDTO'
      responses:
        '200':
          description: OK          
    delete:
      tags: ['form']
      summary: Delete Form
      operationId: DeleteForms
      parameters:
        - $ref: '#/components/parameters/IdPathParameter'
      responses:
        '200':
          description: OK
  
#-------------------------------
# Data CRUD
#-------------------------------
  /data:
    get:
      summary: List Data
      description: List data
      operationId: ListData
      tags: ['data']
      responses:
        '200':
          $ref: '#/components/responses/ListResponse'
                    
    post:
      tags: ['data']
      summary: Create Data
      operationId: CreateData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataRequestDTO'
      responses:
        '200': 
          $ref: '#/components/responses/CreatedResponse'
  /data/{id}:
    get:
      tags: ['data']
      summary: Get Data
      operationId: GetData
      parameters:
        - $ref: '#/components/parameters/IdPathParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataResponseDTO'
              examples:
                SimpleExample:
                  $ref: '#/components/examples/DataResponseDTOExample'
    put:
      tags: ['data']
      summary: Update Data
      operationId: UpdateData
      parameters:
        - $ref: '#/components/parameters/IdPathParameter'
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/DataRequestDTO'
      responses:
        '200':
          description: OK          
    delete:
      tags: ['data']
      summary: Delete Data
      operationId: DeleteData
      parameters:
        - $ref: '#/components/parameters/IdPathParameter'
      responses:
        '200':
          description: OK
        

#-------------------------------
# System
#-------------------------------
  /ping:
    get:
      summary: Server heartbeat operation
      operationId: Ping
      description: >-
        This operation shows how to override the global security defined above,
        as we want to open it up for all users.
      security: []
      responses:
        '200':
          description: OK

#-------------------------------------------------------------------------------
components:
#-------------------------------------------------------------------------------
  parameters: # Parameters
#-------------------------------------------------------------------------------
# Path Parameters
#-------------------------------------------------------------------------------
  
    IdPathParameter:
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
        
#-------------------------------------------------------------------------------
# Query Parameters
#-------------------------------------------------------------------------------
    
    LimitQueryParameter:
      in: query
      name: limit
      schema:
        type: integer
    OffsetQueryParameter:
      in: query
      name: offset
      schema:
        type: integer
    FilterQueryParameter:
      in: query
      name: filterBy
      schema:
        type: object
    SortQueryParameter:
      in: query
      name: sortBy
      schema:
        type: array
        items:
          type: string


#-------------------------------------------------------------------------------
  responses: # Responses
#-------------------------------------------------------------------------------
  
    ListResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListResponseDTO'
    CreatedResponse:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatedResponseDTO'

#-------------------------------------------------------------------------------
  schemas: # Data Types
#-------------------------------------------------------------------------------
# Generic 
#-------------------------------------------------------------------------------
    
    UUID:
      type: string
      format: uuid
      example: 
        3fa85f64-5717-4562-b3fc-2c963f66afa1
        
#-------------------------------------------------------------------------------
# Request DTO
#-------------------------------------------------------------------------------
    
    FormRequestDTO:
      type: object
      properties:
        name:
          type: string
        content:
          type: object
      required:
        - name
        - content
        
    DataRequestDTO:
      type: object
      properties:
        formId:
          type: string
        content:
          type: object
      required:
        - formId
        - content

#-------------------------------------------------------------------------------
# Response DTO
#-------------------------------------------------------------------------------
    CreatedResponseDTO:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
      required: 
        - id
    ListResponseDTO:
      type: object
      properties:
        _metadata:
          $ref: '#/components/schemas/PaginationResponeDTO'
        items:
          type: array
          items:
              $ref: '#/components/schemas/ListItemResponseDTO'
    ListItemResponseDTO:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        name:
          type: string
      required: 
        - id
        - name
      example: 
        id: '3fa85f64-5717-4562-b3fc-2c963f66afa1'
        name: 'Simple form'
    PaginationResponeDTO:
      type: object
      properties:
        size:
          type: integer
        start:
          type: integer
        limit:
          type: integer
        current:
          type: integer
      required: 
        - size
        - start
        - limit
        - current
      example: 
        size: 3
        start: 1
        limit: 10
        current: 1
        
    FormResponseDTO:
      type: object
      required: 
        - id
        - name
        - schema
        - uiSchema
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        name:
          type: string
        schema:
          type: object
        uiSchema:
          type: object

    DataResponseDTO:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UUID'
        formId:
          $ref: '#/components/schemas/UUID'
        content:
          type: object
      required: 
        - id
        - formId
        - content
        
#-------------------------------------------------------------------------------
# Examples
#-------------------------------------------------------------------------------
  examples:
    DataResponseDTOExample:
      value:
        formId: 3fa85f64-5717-4562-b3fc-2c963f66afa1
        content:
          name: John Doe
          vegetarian: false
          birthDate: '1985-06-02'
          personalData:
            age: 34
          postalCode: '12345'
    FormResponseDTOExample:
      value: 
        id: 3fa85f64-5717-4562-b3fc-2c963f66afa1
        name: Simple form
        schema:
          type: object
          properties:
            name:
              type: string
              minLength: 3
              description: Please enter your name
            vegetarian:
              type: boolean
            birthDate:
              type: string
              format: date
            nationality:
              type: string
              enum:
                - DE
                - IT
                - JP
                - US
                - RU
                - Other
            personalData:
              type: object
              properties:
                age:
                  type: integer
                  description: Please enter your age.
                height:
                  type: number
                drivingSkill:
                  type: number
                  maximum: 10
                  minimum: 1
                  default: 7
              required:
                - age
                - height
            occupation:
              type: string
            postalCode:
              type: string
              maxLength: 5
          required:
            - occupation
            - nationality
        uiSchema:
          type: VerticalLayout
          elements:
            - type: HorizontalLayout
              elements:
                - type: Control
                  scope: '#/properties/name'
                - type: Control
                  scope: '#/properties/personalData/properties/age'
                - type: Control
                  scope: '#/properties/birthDate'
            - type: Label
              text: Additional Information
            - type: HorizontalLayout
              elements:
                - type: Control
                  scope: '#/properties/personalData/properties/height'
                - type: Control
                  scope: '#/properties/nationality'
                - type: Control
                  scope: '#/properties/occupation'
                  suggestion:
                    - Accountant
                    - Engineer
                    - Freelancer
                    - Journalism
                    - Physician
                    - Student
                    - Teacher
                    - Other